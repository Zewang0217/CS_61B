Q: Can you think of an analogy between the process of tesselating hexagons and randomly generating a world using rooms and hallways? 
What is the hexagon and what is the tesselation on the project 2 side?

A:

-----
Q: If you were to start working on world generation, what kind of method would you think of writing first? 
Think back to the lab and the process used to eventually get to tesselating hexagons.

A:

-----
Q: What distinguishes a hallway from a room? How are they similar?

A:

-----
Q: For tesselating hexagons, one of the hardest parts is figuring out where to place each hexagon/how to easily place hexagons on screen in an algorithmic way. 
After looking at your own implemention, consider the implementation provided near the end of the lab. 
How did your implementation differ from the given one? What lessons can be learned from it?

A:

-----
Q: Consider an algorithm for placing rooms and hallways on your map. 
Ideally, consider many algorithms and think about what makes some easier or harder to implement. Try and bring those ideas together into a single simple algorithm which accomplishes the task. 
In general, algorithms with as few edge cases as possible are better algorithms.

A:

问题 1
问：你能想出拼接六边形的过程与使用房间和走廊随机生成世界的过程之间的类比吗？在项目 2 中，什么相当于六边形，什么相当于拼接过程？
问题 2
问：如果你要开始进行世界生成的工作，你首先会想到编写哪种方法？回想一下实验以及最终实现六边形拼接的过程。
问题 3
问：走廊和房间有什么区别？它们有哪些相似之处？
问题 4
问：对于拼接六边形而言，最困难的部分之一是弄清楚每个六边形的放置位置，以及如何以算法的方式轻松地在屏幕上放置六边形。在查看你自己的实现之后，再考虑实验末尾给出的实现。你的实现与给定的实现有何不同？能从中学到什么经验教训？
问题 5
问：考虑一种在地图上放置房间和走廊的算法。理想情况下，思考多种算法，并考虑是什么因素使得某些算法更容易或更难实现。尝试将这些想法整合为一个能完成该任务的简单算法。一般来说，边缘情况越少的算法就是越好的算法。
